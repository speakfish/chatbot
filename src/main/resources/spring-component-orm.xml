<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="mergeSql" value="true" />
		<property name="slowSqlMillis" value="5000" />
		<property name="logSlowSql" value="true" />
	</bean>
	<!-- https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_LogFilter -->
	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="dataSourceLogEnabled" value="true" />
		<property name="resultSetLogEnabled" value="false" />
		<!-- 输出可执行的SQL -->
		<property name="statementExecutableSqlLogEnable" value="true" />
	</bean>

	<bean id="baseDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 
		<bean id="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource" 
		destroy-method="close"> <property name="url" value="${jdbc.url}" /> <property 
		name="username" value="${jdbc.username}" /> <property name="password" value="${jdbc.password}" 
		/> <property name="maxActive" value="${jdbc.maxActive}" /> <property name="initialSize" 
		value="${jdbc.initialSize}" /> <property name="minIdle" value="${jdbc.minIdle}" 
		/> <property name="validationQuery" value="${jdbc.validationQuery}" /> <property 
		name="connectionProperties" value="druid.stat.slowSqlMillis=2000" /> <property 
		name="filters" value="wall" /> <property name="proxyFilters"> <list> <ref 
		bean="stat-filter" /> <ref bean="log-filter" /> </list> </property> <property 
		name="maxWait" value="60000" /> <property name="timeBetweenEvictionRunsMillis" 
		value="60000" /> <property name="minEvictableIdleTimeMillis" value="300000" 
		/> <property name="testWhileIdle" value="true" /> <property name="testOnBorrow" 
		value="false" /> <property name="testOnReturn" value="false" /> <property 
		name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
		value="20" /> <property name="timeBetweenLogStatsMillis" value="300000" /> 
		</bean> -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="run*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="ecomServiceMethod"
			expression="execution (* com.ecom.*.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="ecomServiceMethod" />
	</aop:config>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="baseDataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${jdbc.hbm2ddl}
				</prop>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">
					true
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				<prop key="hibernate.jdbc.use_scrollable_resultset">false</prop>

				<prop key="hibernate.autoReconnect">true</prop>
				<prop key="hibernate.query.startup_check">false</prop>
				<prop key="hibernate.archive.autodetection">class</prop>
				<prop key="hibernate.show_sql">true
				</prop>
				<prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'
				</prop>
				<prop key="hibernate.max_fetch_depth">0
				</prop>
				<prop key="hibernate.jdbc.fetch_size">50
				</prop>
				<prop key="hibernate.jdbc.batch_size">20
				</prop>
				<prop key="hibernate.query.factory_class">
					org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
				</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">
					true
				</prop>
				<prop key="hibernate.connection.SetBigStringTryClob">
					true
				</prop>
				<prop key="hibernate.default_schema">
					${jdbc.default_schema}
				</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.ecom.*.entity</value>
			</list>
		</property>
	</bean>
</beans>
